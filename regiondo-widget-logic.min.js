const PARTICIPANT_REGEX = /person|participant|partecipant/i; let mutationObserver = null; const getRegiondoCatalog = e => e.querySelector("#root"), setButtonStyles = (e, t) => { e?.forEach((e => { e.disabled = !t, e.style.backgroundColor = t ? "transparent" : "grey", e.style.cursor = t ? "pointer" : "not-allowed" })) }, handleDependentAddons = e => { e.querySelectorAll(".MuiAccordionDetails-root").forEach((t => { const o = Array.from(t.querySelectorAll(".regiondo-option__name .regiondo-option__title")), r = o.filter((e => PARTICIPANT_REGEX.test(e.textContent))), n = o.filter((e => !PARTICIPANT_REGEX.test(e.textContent))); n.forEach((e => { const t = e.closest(".regiondo-option__name"), o = t?.querySelectorAll(".quantity-wrapper button"); setButtonStyles(o, !1) })); const s = r.some((e => { const t = e.closest(".regiondo-option__name"); return t?.querySelector(".regiondo-qty__minus:not([disabled])") })); s && n.forEach((e => { const t = e.closest(".regiondo-option__name"), o = t?.querySelectorAll(".quantity-wrapper button"); setButtonStyles(o, !0) })); const i = e.querySelector(".regiondo-button.regiondo-button-addtocart"); i && (i.disabled = !s) })) }, handleCheckoutAddons = e => { e.querySelectorAll(".regiondo-table").forEach((t => { const o = Array.from(t.querySelectorAll(".regiondo-product-option-name")).some((e => PARTICIPANT_REGEX.test(e.textContent))), r = e.querySelector(".regiondo-button.regiondo-button-checkout"); r && (r.disabled = !o) })) }, startMutationObserver = e => { mutationObserver && mutationObserver.disconnect(), mutationObserver = new MutationObserver((() => { const t = e.querySelector(".regiondo-step-variation.regiondo-step--selected"), o = e.querySelector(".regiondo-checkout.regiondo-checkout--cart"); t && handleDependentAddons(e), o && handleCheckoutAddons(e) })), mutationObserver.observe(e, { childList: !0, subtree: !0, attributes: !0, attributeFilter: ["class"] }) }, observeShadowDOM = () => { const e = document.querySelector("booking-widget"); if (!e || !e.shadowRoot) return void setTimeout(observeShadowDOM, 100); const t = e.shadowRoot, o = getRegiondoCatalog(t); o && startMutationObserver(o) }; observeShadowDOM();   
